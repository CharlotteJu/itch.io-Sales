apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))
android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.charlotte.judon.gifstats"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 2
        versionName "2.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //LICENCE ANYCHART KEY
        resValue "string", "ANYCHART_LICENCE_KEY", localProperties["ANYCHART_LICENCE_KEY"] //(project.findProperty("ANYCHART_LICENCE_KEY") ?: "")
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                   // -keep 'class com.github.aachartmodel.aainfographics.** { *; }'
                    'proguard-rules.pro'
            buildConfigField 'String', "ANYCHART_LICENCE_KEY", localProperties["ANYCHART_LICENCE_KEY"] //(project.findProperty("ANYCHART_LICENCE_KEY") ?: "")
            resValue "string", "ANYCHART_LICENCE_KEY", localProperties["ANYCHART_LICENCE_KEY"] //(project.findProperty("ANYCHART_LICENCE_KEY") ?: "")
        }
        debug {
            minifyEnabled true
            buildConfigField 'String', "ANYCHART_LICENCE_KEY", localProperties["ANYCHART_LICENCE_KEY"] //(project.findProperty("ANYCHART_LICENCE_KEY") ?: "")
            resValue "string", "ANYCHART_LICENCE_KEY", localProperties["ANYCHART_LICENCE_KEY"] //(project.findProperty("ANYCHART_LICENCE_KEY") ?: "")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src/main/assets', 'src/main/assets/font'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'

    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.jjoe64:graphview:4.2.2'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.room:room-runtime:2.2.6"
    implementation "androidx.room:room-ktx:2.2.6"
    kapt 'androidx.room:room-compiler:2.2.6'
    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1"
    //Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.github.AAChartModel:AAChartCore-Kotlin:-SNAPSHOT'
    implementation 'com.github.AnyChart:AnyChart-Android:1.1.2'
    //FUEL
    implementation 'com.github.kittinunf.fuel:fuel:2.2.1'
    implementation 'com.github.kittinunf.fuel:fuel-json:2.2.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "androidx.room:room-testing:2.2.6"

}